name: GitHub Actions
on: [ push ]
concurrency: ci-${{ github.ref }} # to avoid tag collisions in the ECR
env:
  # Name of the image in the ECR
  APP_IMAGE: php-kbc-project-restore

  # DockerHub login
  DOCKERHUB_USER: "keboolabot"
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  # AWS Credentials
  TEST_AWS_ACCESS_KEY_ID: "AKIATDSWT524ZFYZ7XPP"
  TEST_AWS_SECRET_ACCESS_KEY: "${{ secrets.TEST_AWS_SECRET_ACCESS_KEY }}"
  TEST_AWS_REGION: "us-east-1"
  TEST_AWS_S3_BUCKET: "php-kbc-project-restore-s3filesbucket-15tihij1nuchs"

  # Azure Credentials
  TEST_AZURE_ACCOUNT_NAME: "projectmigration"
  TEST_AZURE_ACCOUNT_KEY: ${{ secrets.TEST_AZURE_ACCOUNT_KEY }}
  TEST_AZURE_CONTAINER_NAME: "test-restore-project"

  # GCP Credentials
  TEST_GCP_SERVICE_ACCOUNT: ${{ secrets.TEST_GCP_SERVICE_ACCOUNT }}
  TEST_GCP_BUCKET: "ci-php-kbc-project-restore"

  # KBC Credentials
  TEST_STORAGE_API_URL: "https://connection.keboola.com/"
  # https://connection.keboola.com/admin/projects/9017/dashboard
  TEST_STORAGE_API_TOKEN_S3: "${{ secrets.TEST_STORAGE_API_TOKEN_S3 }}"
  # https://connection.keboola.com/admin/projects/10143/dashboard
  TEST_STORAGE_API_TOKEN_ABS: "${{ secrets.TEST_STORAGE_API_TOKEN_ABS }}"
  # https://connection.keboola.com/admin/projects/10333/dashboard
  TEST_STORAGE_API_TOKEN_GCS: "${{ secrets.TEST_STORAGE_API_TOKEN_GCS }}"


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Print Docker version
        run: docker -v
      - name: Docker login
        if: env.DOCKERHUB_TOKEN
        run: docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"
      - name: Build image
        run: |
          docker build -t $APP_IMAGE .
          docker save ${APP_IMAGE} -o /tmp/php-kbc-project-restore.tar
      - name: Upload image to artifact
        uses: actions/upload-artifact@v4
        with:
          name: php-kbc-project-restore
          path: /tmp/php-kbc-project-restore.tar

  tests:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        include:
          - run: composer ci-except-tests
            token: TEST_STORAGE_API_TOKEN_S3
          - run: composer tests-s3
            token: TEST_STORAGE_API_TOKEN_S3
          - run: composer tests-abs
            token: TEST_STORAGE_API_TOKEN_ABS
          - run: composer tests-gcs
            token: TEST_STORAGE_API_TOKEN_GCS
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4
      - name: Download image from artifact
        uses: actions/download-artifact@v4
        with:
          name: php-kbc-project-restore
          path: /tmp
      - name: Load image
        run: docker load -i /tmp/php-kbc-project-restore.tar
      - name: Prepare data
        run: docker run
          -e TEST_STORAGE_API_URL
          -e TEST_STORAGE_API_TOKEN=${{ secrets[matrix.token] }}
          -e TEST_AWS_ACCESS_KEY_ID
          -e TEST_AWS_SECRET_ACCESS_KEY
          -e TEST_AWS_REGION
          -e TEST_AWS_S3_BUCKET
          -e TEST_AZURE_ACCOUNT_NAME
          -e TEST_AZURE_ACCOUNT_KEY
          -e TEST_AZURE_CONTAINER_NAME
          -e TEST_GCP_SERVICE_ACCOUNT
          -e TEST_GCP_BUCKET
          ${{env.APP_IMAGE}}
          composer prepare-test-data
      - name: Run tests
        run: docker run
          -e TEST_STORAGE_API_URL
          -e TEST_STORAGE_API_TOKEN=${{ secrets[matrix.token] }}
          -e TEST_AWS_ACCESS_KEY_ID
          -e TEST_AWS_SECRET_ACCESS_KEY
          -e TEST_AWS_REGION
          -e TEST_AWS_S3_BUCKET
          -e TEST_AZURE_ACCOUNT_NAME
          -e TEST_AZURE_ACCOUNT_KEY
          -e TEST_AZURE_CONTAINER_NAME
          -e TEST_GCP_SERVICE_ACCOUNT
          -e TEST_GCP_BUCKET
          ${{env.APP_IMAGE}}
          ${{matrix.run}}
